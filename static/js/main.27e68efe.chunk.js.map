{"version":3,"sources":["actions.js","transformers.js","SpinKit.js","Navbar.js","formatters.js","AddSymbolForm.js","PortfolioActions.js","PortfolioNav.js","PortfolioContainer.js","Overview.js","Performance.js","Stock.js","Transactions.js","App.js","registerServiceWorker.js","index.js","reducers.js"],"names":["fetchAllQuotesTimeout","IEX_ROOT","addTransaction","transaction","type","changePageSize","nextPageSize","pageSize","deleteSymbols","symbols","clearFetchQuotesTimeout","clearTimeout","fetchAllQuotes","dispatch","getState","setFetchQuotesTimeout","setTimeout","length","fetch","iexApiKey","encodeURIComponent","join","then","response","json","data","nextQuotes","Object","keys","forEach","symbol","quote","quotes","catch","error","finally","importTransactionsFile","file","fileReader","FileReader","onerror","onload","parsedCsv","csvParse","result","columns","transactions","map","cashValue","parseFloat","commission","Commission","date","Date","id","notes","Notes","price","Price","shares","Shares","Symbol","Type","readAsText","SpinKit","props","className","title","updatedAtFormatter","window","Intl","DateTimeFormat","undefined","day","hour","hour12","minute","month","second","year","findFirstNSymbols","n","collection","search","uppercaseSearch","toUpperCase","results","some","iexSymbol","startsWith","push","noop","Suggestion","suggestion","query","highlightedSlice","slice","normalSlice","name","SuggestionValue","Navbar","handleSearchBlur","setState","searchIsFocused","handleSearchFocus","allIexSymbols","handleSearchQueryChange","event","currentTarget","nodeName","setSearchQuery","value","handleSearchQueryClear","handleSearchSubmit","preventDefault","handleSetIexApiKey","state","nextIexApiKey","closeActiveModal","handleSuggestionSelected","suggestionValue","history","activeModal","openSettingsModal","setNextIexApiKey","target","toggle","isOpen","searchQuery","searchResults","nextSearchQuery","this","fetchErrorMessage","updatedAt","color","dark","expand","tag","NavLink","to","onClick","navbar","action","inline","onSubmit","getSuggestionValue","highlightFirstSuggestion","inputProps","onBlur","onChange","onFocus","placeholder","onSuggestionsClearRequested","onSuggestionsFetchRequested","onSuggestionSelected","renderSuggestion","suggestions","theme","container","input","cx","suggestionsContainer","suggestionsList","suggestionHighlighted","isLoading","aria-label","role","dateTime","toISOString","format","size","htmlFor","required","outline","React","withRouter","connect","isFetchingCount","bigNumberFormatter","NumberFormat","maximumFractionDigits","POWER_SUFFIXES","abbreviatedNumberFormatter","num","fixed","b","toPrecision","split","k","Math","floor","min","parseInt","c","abs","toFixed","pow","currencyFormatter","minimumFractionDigits","numberFormatter","percentFormatter","style","AddSymbolForm","showTransactionData","setShowTransactionData","formEl","method","formData","formSerialize","hash","onAddSymbol","current","reset","innerRef","for","autoComplete","bsSize","disabled","step","marginBottom","PortfolioActions","accept","hidden","files","onImportPortfolio","onDeletePortfolio","onDownloadPortfolio","PortfolioNav","exact","PortfolioContainer","handleAddSymbol","handleDeletePortfolio","confirm","handleDownloadPortfolio","handleImportPortfolio","deleteDisabled","onDelete","children","md","SelectReactTable","selectTableHOC","ReactTable","classes","cell","TABLE_COLUMNS","accessor","Cell","Footer","Header","headerClassName","original","change","changePercent","totalDaysGain","reduce","total","daysGain","Overview","handleDeleteSelectedSymbols","Array","from","selectedSymbols","handlePageSizeChange","handleToggleAllSymbols","isSelected","isAllSymbolsSelected","Set","handleToggleSymbolSelected","isSymbolSelected","delete","add","forceUpdate","has","nextProps","prevState","hasChanges","nextSymbols","nextSelectedSymbols","tableData","totalShares","filter","prev","curr","companyName","high","latestPrice","latestVolume","low","marketCap","open","defaultSorted","desc","getPaginationProps","NextComponent","PreviousComponent","showPageJump","keyField","noDataText","onPageSizeChange","appSettings","selectAll","selectType","toggleAll","toggleSelection","costBasis","marketValue","totalCostBasis","totalMarketValue","totalGainPercent","Performance","gain","gainPercent","showReturns","wholeNumberFormatter","SummaryListItem","x","d","y","close","margin","xMax","yMax","Stock","xScale","yScale","match","useDispatch","chart","useSelector","charts","params","symbolData","deviationYFudge","deviation","scaleTime","range","domain","extent","scaleLinear","max","avgTotalVolume","previousClose","week52Low","week52High","peRatio","offset","backgroundColor","borderRadius","height","lineHeight","width","fill","rx","stopColor","stopOpacity","top","left","stroke","scale","tickLabelProps","val","i","dx","dy","textAnchor","fontFamily","fontSize","tickStroke","tickTextFill","Transactions","handleDeleteSelectedTransactions","transactionsToDelete","selectedTransactionIds","handleToggleAllTransactionIds","isAllTransactionIdsSelected","handleToggleTransactionIdSelected","transactionId","isTransactionIdSelected","nextTransactions","nextSelectedTransactionIds","App","component","path","href","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","rootElement","document","getElementById","Error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","indexOf","nextTransactionId","newTransactions","newTransaction","concat","documentBody","body","csvData","csvStringify","stocksTransactions","Name","header","blob","Blob","a","createElement","url","URL","createObjectURL","download","display","appendChild","click","revokeObjectURL","isFetchingAllIexSymbols","message","now","applyMiddleware","thunk","persistState","key","ReactDOM","render","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.27e68efe.chunk.js","sourcesContent":["/* @flow */\n\nimport type {\n  AddSymbolAction,\n  AddTransactionAction,\n  AddTransactionsAction,\n  ChangePageSizeAction,\n  DeletePortfolioAction,\n  DeleteSymbolsAction,\n  DeleteTransactionsAction,\n  Dispatch,\n  DownloadPortfolioAction,\n  GetState,\n  SetIexApiKeyAction,\n  ThunkAction,\n  Transaction,\n} from './types';\nimport csvParse from 'csv-parse/lib/es5/sync';\nimport { transformGfToStocks } from './transformers';\n\nconst IEX_ROOT = 'https://cloud.iexapis.com/v1';\n\nexport function addSymbol(symbol: string): AddSymbolAction {\n  return { symbol, type: 'ADD_SYMBOL' };\n}\n\nexport function addTransaction(transaction: Transaction): AddTransactionAction {\n  return { transaction, type: 'ADD_TRANSACTION' };\n}\n\nexport function addTransactions(transactions: Array<Transaction>): AddTransactionsAction {\n  return { transactions, type: 'ADD_TRANSACTIONS' };\n}\n\nexport function changePageSize(nextPageSize: number): ChangePageSizeAction {\n  return { pageSize: nextPageSize, type: 'CHANGE_PAGE_SIZE' };\n}\n\nexport function deletePortfolio(): DeletePortfolioAction {\n  return { type: 'DELETE_PORTFOLIO' };\n}\n\nexport function deleteSymbols(symbols: Array<string>): DeleteSymbolsAction {\n  return { symbols, type: 'DELETE_SYMBOLS' };\n}\n\nexport function deleteTransactions(transactions: Array<Transaction>): DeleteTransactionsAction {\n  return { transactions, type: 'DELETE_TRANSACTIONS' };\n}\n\nexport function downloadPortfolio(): DownloadPortfolioAction {\n  return { type: 'DOWNLOAD_PORTFOLIO' };\n}\n\nexport function setIexApiKey(iexApiKey: string): SetIexApiKeyAction {\n  return { iexApiKey, type: 'SET_IEX_API_KEY' };\n}\n\n// A timeout to periodically fetch new quotes.\nlet fetchAllQuotesTimeout: ?TimeoutID;\n\nfunction clearFetchQuotesTimeout() {\n  if (fetchAllQuotesTimeout != null) {\n    clearTimeout(fetchAllQuotesTimeout);\n    fetchAllQuotesTimeout = null;\n  }\n}\n\n// Example data:\n//\n// {\n//   date: '2018-04-09',\n//   open: 169.88,\n//   high: 173.09,\n//   low: 169.845,\n//   close: 170.05,\n//   volume: 29017718,\n//   unadjustedVolume: 29017718,\n//   change: 1.67,\n//   changePercent: 0.992,\n//   vwap: 171.555,\n//   label: 'Apr 9',\n//   changeOverTime: 0,\n// }\nexport function fetchSymbolData(symbol: string): ThunkAction {\n  return function(dispatch: Dispatch, getState: GetState) {\n    dispatch({ type: 'FETCH_SYMBOL_DATA_REQUEST' });\n    fetch(\n      `${IEX_ROOT}/stock/${symbol}/batch?types=chart,quote&range=1y&token=${getState().iexApiKey}`\n    )\n      .then(response => {\n        response\n          .json()\n          .then(symbolData => {\n            dispatch({ symbol, symbolData, type: 'FETCH_SYMBOL_DATA_SUCCESS' });\n          })\n          .catch(error => {\n            dispatch({ error, type: 'FETCH_SYMBOL_DATA_FAILURE' });\n          });\n      })\n      .catch(error => {\n        dispatch({ error, type: 'FETCH_SYMBOL_DATA_FAILURE' });\n      });\n  };\n}\n\nexport function fetchAllQuotes(): ThunkAction {\n  return function(dispatch: Dispatch, getState: GetState) {\n    function setFetchQuotesTimeout() {\n      // Because more `fetchQuote` actions might be in flight, ensure the timer is empty and\n      // synchronously create the next one (even though it was cleared once when this action was\n      // first dispatched). This ensures no more than one timeout at a time is pending.\n      clearFetchQuotesTimeout();\n      setTimeout(() => {\n        dispatch(fetchAllQuotes());\n      }, 300000); // Fetch quotes minimally every 5 minutes. (5 * 60 * 1000)\n    }\n\n    const { symbols } = getState();\n    if (symbols.length === 0) {\n      // No need to do anything if there are no symbols to fetch. Restart the timer and bomb out\n      // early.\n      clearFetchQuotesTimeout();\n      setFetchQuotesTimeout();\n      return;\n    }\n\n    clearFetchQuotesTimeout();\n    dispatch({ type: 'FETCH_QUOTES_REQUEST' });\n    fetch(\n      `${IEX_ROOT}/stock/market/batch?types=quote&token=${\n        getState().iexApiKey\n      }&symbols=${encodeURIComponent(getState().symbols.join(','))}`\n    )\n      .then(response => {\n        response\n          .json()\n          .then(data => {\n            // Data comes back under the endpoint from which it was requested. In this case the key\n            // is `quote`. Unzip the response to match the shape of the store.\n            //\n            // See: https://iextrading.com/developer/docs/#batch-requests\n            const nextQuotes = {};\n            Object.keys(data).forEach(symbol => {\n              nextQuotes[symbol] = data[symbol].quote;\n            });\n            dispatch({ quotes: nextQuotes, type: 'FETCH_QUOTES_SUCCESS' });\n          })\n          .catch(error => {\n            dispatch({ error, type: 'FETCH_QUOTES_FAILURE' });\n          });\n      })\n      .catch(error => {\n        dispatch({ error, type: 'FETCH_QUOTES_FAILURE' });\n      })\n      .finally(() => {\n        setFetchQuotesTimeout();\n      });\n  };\n}\n\nexport function fetchAllIexSymbols(): ThunkAction {\n  return function(dispatch: Dispatch, getState: GetState) {\n    dispatch({ type: 'FETCH_ALL_IEX_SYMBOLS_REQUEST' });\n    fetch(`${IEX_ROOT}/ref-data/symbols?token=${getState().iexApiKey}`)\n      .then(response => {\n        response\n          .json()\n          .then(data => {\n            dispatch({ allIexSymbols: data, type: 'FETCH_ALL_IEX_SYMBOLS_SUCCESS' });\n          })\n          .catch(error => {\n            dispatch({ error, type: 'FETCH_ALL_IEX_SYMBOLS_FAILURE' });\n          });\n      })\n      .catch(error => {\n        dispatch({ error, type: 'FETCH_ALL_IEX_SYMBOLS_FAILURE' });\n      });\n  };\n}\n\nexport function importTransactionsFile(file: Blob): ThunkAction {\n  return function(dispatch: Dispatch) {\n    dispatch({ type: 'IMPORT_TRANSACTIONS_FILE_REQUEST' });\n    const fileReader = new FileReader();\n    fileReader.onerror = () => {\n      dispatch({ type: 'IMPORT_TRANSACTIONS_FILE_FAILURE' });\n    };\n    fileReader.onload = () => {\n      const parsedCsv = csvParse(fileReader.result, { columns: true });\n      dispatch(addTransactions(transformGfToStocks(parsedCsv)));\n      dispatch(fetchAllQuotes());\n      dispatch({ type: 'IMPORT_TRANSACTIONS_FILE_SUCCESS' });\n    };\n    fileReader.readAsText(file);\n  };\n}\n","/* @flow */\n\nimport type { Quote, Transaction } from './types';\n\ntype GfTransaction = {\n  'Cash value': string,\n  Commission: string,\n  Date: string,\n  Name: string,\n  Notes: string,\n  Price: string,\n  Shares: string,\n  Symbol: string,\n  Type: 'Buy' | 'Sell',\n};\n\nexport function transformGfToStocks(gfTransactions: Array<GfTransaction>): Array<Transaction> {\n  return gfTransactions.map(transaction => ({\n    cashValue: transaction['Cash value'] === '' ? null : parseFloat(transaction['Cash value']),\n    commission: parseFloat(transaction.Commission),\n    date: transaction.Date,\n    id: -1, // A real ID is added in the reducer.\n    notes: transaction.Notes,\n    price: parseFloat(transaction.Price),\n    shares: parseFloat(transaction.Shares),\n    symbol: transaction.Symbol,\n    type: transaction.Type,\n  }));\n}\n\nexport function transformStocksToGf(\n  stocksTransactions: Array<Transaction>,\n  quotes: { [symbol: string]: Quote }\n): Array<GfTransaction> {\n  return stocksTransactions.map(transaction => ({\n    'Cash value': transaction.cashValue == null ? '' : `${transaction.cashValue}`,\n    Commission: `${transaction.commission}`,\n    Date: transaction.date == null ? '' : transaction.date,\n    Name: quotes[transaction.symbol] == null ? '' : quotes[transaction.symbol].companyName,\n    Notes: transaction.notes == null ? '' : transaction.notes,\n    Price: `${transaction.price}`,\n    Shares: `${transaction.shares}`,\n    Symbol: transaction.symbol,\n    Type: transaction.type,\n  }));\n}\n","/* @flow */\n\nimport './SpinKit.css';\nimport * as React from 'react';\n\ntype Props = {\n  title: ?string,\n  type: 'folding-cube',\n};\n\nexport default function SpinKit(props: Props): React.Node {\n  return (\n    <div className=\"sk-folding-cube mr-3\" title={props.title}>\n      <div className=\"sk-cube1 sk-cube\" />\n      <div className=\"sk-cube2 sk-cube\" />\n      <div className=\"sk-cube4 sk-cube\" />\n      <div className=\"sk-cube3 sk-cube\" />\n    </div>\n  );\n}\n","/* @flow */\n\nimport './Navbar.css';\nimport * as React from 'react';\nimport {\n  Button,\n  Collapse,\n  Form,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Navbar as ReactstrapNavbar,\n  NavbarBrand,\n  NavbarToggler,\n} from 'reactstrap';\nimport type { Dispatch, IEXSymbol } from './Types';\nimport { NavLink, type RouterHistory, withRouter } from 'react-router-dom';\nimport { fetchAllIexSymbols, setIexApiKey } from './actions';\nimport Autosuggest from 'react-autosuggest';\nimport SpinKit from './SpinKit';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\n\ntype RouterProps = {\n  history: RouterHistory,\n};\n\ntype StateProps = {\n  allIexSymbols: ?Array<IEXSymbol>,\n  fetchErrorMessage: ?string,\n  iexApiKey: ?string,\n  isLoading: boolean,\n  updatedAt: ?number,\n};\n\ntype ConnectProps = StateProps & { dispatch: Dispatch };\n\ntype Props = RouterProps & ConnectProps;\n\ntype State = {\n  activeModal: ?{ type: 'settings' },\n  isOpen: boolean,\n  nextIexApiKey: string,\n  searchIsFocused: boolean,\n  searchQuery: string,\n  searchResults: Array<IEXSymbol>,\n};\n\nconst updatedAtFormatter = new window.Intl.DateTimeFormat(undefined, {\n  day: 'numeric',\n  hour: 'numeric',\n  hour12: false,\n  minute: 'numeric',\n  month: 'numeric',\n  second: 'numeric',\n  year: 'numeric',\n});\n\nfunction findFirstNSymbols(n: number, collection: Array<IEXSymbol>, search: string) {\n  // Symbols are always uppercase, ensure uppercase to match.\n  const uppercaseSearch = search.toUpperCase();\n  const results: Array<IEXSymbol> = [];\n  collection.some(iexSymbol => {\n    if (iexSymbol.symbol.startsWith(uppercaseSearch)) {\n      results.push(iexSymbol);\n      if (results.length === n) return true;\n    }\n    return false;\n  });\n  return results;\n}\n\nfunction noop() {}\n\nfunction Suggestion(suggestion: IEXSymbol, { query }: { query: string }) {\n  // This is a simple prefix search (see `findFirstNSymbols`), so the starting index to highlight\n  // is assumed to be 0.\n  const highlightedSlice = suggestion.symbol.slice(0, query.length);\n  const normalSlice = suggestion.symbol.slice(query.length);\n  return (\n    <span>\n      <strong>{highlightedSlice}</strong>\n      <span>{normalSlice}</span> - {suggestion.name}\n    </span>\n  );\n}\n\nfunction SuggestionValue(suggestion: IEXSymbol) {\n  return suggestion.symbol;\n}\n\nclass Navbar extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeModal: null,\n      isOpen: false,\n      nextIexApiKey: '',\n      searchIsFocused: false,\n      searchQuery: '',\n      searchResults: [],\n    };\n  }\n\n  handleSearchBlur = () => {\n    this.setState({ searchIsFocused: false });\n  };\n\n  handleSearchFocus = () => {\n    if (this.props.allIexSymbols == null) {\n      this.props.dispatch(fetchAllIexSymbols());\n    }\n    this.setState({ searchIsFocused: true });\n  };\n\n  handleSearchQueryChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    if (event.currentTarget.nodeName !== 'INPUT') return;\n    this.setSearchQuery(event.currentTarget.value);\n  };\n\n  handleSearchQueryClear = () => {\n    this.setSearchQuery('');\n  };\n\n  handleSearchSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  handleSetIexApiKey = (event: SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.dispatch(setIexApiKey(this.state.nextIexApiKey));\n    this.closeActiveModal();\n  };\n\n  handleSuggestionSelected = (event: Event, { suggestionValue }: { suggestionValue: string }) => {\n    this.props.history.push(`/stocks/${suggestionValue}`);\n  };\n\n  setSearchQuery(nextSearchQuery: string) {\n    this.setState({\n      searchQuery: nextSearchQuery,\n      searchResults:\n        this.props.allIexSymbols == null\n          ? []\n          : findFirstNSymbols(5, this.props.allIexSymbols, nextSearchQuery),\n    });\n  }\n\n  closeActiveModal = () => {\n    this.setState({ activeModal: null });\n  };\n\n  openSettingsModal = () => {\n    this.setState({\n      activeModal: { type: 'settings' },\n      nextIexApiKey: this.props.iexApiKey == null ? '' : this.props.iexApiKey,\n    });\n  };\n\n  setNextIexApiKey = event => {\n    this.setState({ nextIexApiKey: event.target.value });\n  };\n\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    // Create local references to enable Flow refinement beyond `null | undefined`.\n    const { fetchErrorMessage, updatedAt } = this.props;\n    return (\n      <ReactstrapNavbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand className=\"text-warning\" tag={NavLink} to=\"/\">\n          Finance!\n        </NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Form\n            action=\"/finance/stocks\"\n            className=\"mr-auto\"\n            inline\n            onSubmit={this.handleSearchSubmit}>\n            <Autosuggest\n              getSuggestionValue={SuggestionValue}\n              highlightFirstSuggestion\n              inputProps={{\n                name: 'symbol',\n                onBlur: this.handleSearchBlur,\n                onChange: this.handleSearchQueryChange,\n                onFocus: this.handleSearchFocus,\n                placeholder: 'Search...',\n                value: this.state.searchQuery,\n              }}\n              onSuggestionsClearRequested={this.handleSearchQueryClear}\n              onSuggestionsFetchRequested={noop}\n              onSuggestionSelected={this.handleSuggestionSelected}\n              renderSuggestion={Suggestion}\n              suggestions={this.state.searchResults}\n              theme={{\n                container: 'autosuggest',\n                input: cx('dark-transition form-control', {\n                  'bg-dark': !this.state.searchIsFocused,\n                }),\n                suggestionsContainer: 'dropdown',\n                suggestionsList: `dropdown-menu ${\n                  this.state.searchResults.length > 0 ? 'show' : ''\n                }`,\n                suggestion: 'dropdown-item',\n                suggestionHighlighted: 'active',\n              }}\n            />\n          </Form>\n          {this.props.isLoading ? (\n            <SpinKit title=\"Fetching new quotes...\" type=\"folding-cube\" />\n          ) : null}\n          {fetchErrorMessage == null ? null : (\n            <abbr className=\"mr-1\" title={`Error: ${fetchErrorMessage}`}>\n              <span aria-label=\"Connection error\" className=\"text-danger\" role=\"img\">\n                ⚠️\n              </span>\n            </abbr>\n          )}\n          <small>\n            <span className=\"text-white-50\">Quotes last fetched: </span>\n            {updatedAt == null ? (\n              <span className=\"text-white\">never</span>\n            ) : (\n              <time className=\"text-white\" dateTime={new Date(updatedAt).toISOString()}>\n                {updatedAtFormatter.format(updatedAt)}\n              </time>\n            )}\n          </small>\n          <Button className=\"ml-2\" onClick={this.openSettingsModal} size=\"sm\">\n            Settings\n          </Button>\n        </Collapse>\n        <Modal\n          isOpen={this.state.activeModal != null && this.state.activeModal.type === 'settings'}\n          toggle={this.closeActiveModal}>\n          <form onSubmit={this.handleSetIexApiKey}>\n            <ModalBody>\n              <div className=\"form-group\">\n                <label htmlFor=\"apiKey\">IEX Publishable API Key</label>\n                <input\n                  className=\"form-control\"\n                  id=\"apiKey\"\n                  name=\"apiKey\"\n                  onChange={this.setNextIexApiKey}\n                  placeholder=\"pk_abc123…\"\n                  value={this.state.nextIexApiKey}\n                  required\n                />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.closeActiveModal} outline type=\"button\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </ModalFooter>\n          </form>\n        </Modal>\n      </ReactstrapNavbar>\n    );\n  }\n}\n\nexport default (withRouter<Navbar>(\n  connect<ConnectProps, {}, _, _, _, _>(state => ({\n    allIexSymbols: state.allIexSymbols,\n    fetchErrorMessage: state.fetchErrorMessage,\n    iexApiKey: state.iexApiKey,\n    isLoading: state.isFetchingCount > 0,\n    updatedAt: state.updatedAt,\n  }))(Navbar)\n): React.ComponentType<*>);\n","/* @flow */\n\nconst bigNumberFormatter = new window.Intl.NumberFormat(undefined, { maximumFractionDigits: 2 });\nconst POWER_SUFFIXES = ['', 'K', 'M', 'B', 'T'];\nexport const abbreviatedNumberFormatter = {\n  format(num: number, fixed?: number): string {\n    if (num === null || num === 0) return '0'; // terminate early\n\n    fixed = !fixed || fixed < 0 ? 0 : fixed; // number of decimal places to show\n    const b = num.toPrecision(2).split('e'); // get power\n    const k = b.length === 1 ? 0 : Math.floor(Math.min(parseInt(b[1].slice(1), 10), 14) / 3); // floor at decimals, ceiling at trillions\n    const d = k < 0 ? k : Math.abs(k); // enforce -0 is 0\n    const c = d < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3)).toFixed(1 + fixed); // divide by power\n    return `${bigNumberFormatter.format(c)}${POWER_SUFFIXES[k]}`; // append power\n  },\n};\n\n// Don't use style `currency` because it always prints a currency symbol. Match Google Finance\n// exactly (until supporting other currencies) and don't print the symbol.\nexport const currencyFormatter: Intl$NumberFormat = new window.Intl.NumberFormat(undefined, {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n});\n\nexport const numberFormatter: Intl$NumberFormat = new window.Intl.NumberFormat(undefined, {\n  maximumFractionDigits: 3,\n  minimumFractionDigits: 3,\n});\n\nexport const percentFormatter: Intl$NumberFormat = new window.Intl.NumberFormat(undefined, {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n  style: 'percent',\n});\n","/* @flow */\n\nimport * as React from 'react';\nimport { Button, Collapse, Form, FormGroup, Input, Label } from 'reactstrap';\nimport formSerialize from 'form-serialize';\n\ntype Props = {\n  isLoading: boolean,\n  onAddSymbol?: (formData: Object) => void,\n};\n\nexport default function AddSymbolForm(props: Props): React.Node {\n  const [showTransactionData, setShowTransactionData] = React.useState(false);\n  const formEl = React.useRef(null);\n\n  function handleSubmit(event: SyntheticEvent<HTMLFormElement>) {\n    event.preventDefault();\n    const formData = formSerialize(event.currentTarget, { hash: true });\n    if (props.onAddSymbol) props.onAddSymbol(formData);\n    if (formEl.current != null) formEl.current.reset();\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <Form action=\"/api\" method=\"post\" onSubmit={handleSubmit} innerRef={formEl}>\n          <FormGroup>\n            <Label for=\"symbol\">Symbol</Label>\n            <Input autoComplete=\"off\" bsSize=\"sm\" id=\"symbol\" name=\"symbol\" required />\n          </FormGroup>\n          {showTransactionData ? (\n            <FormGroup>\n              <Button\n                color=\"link\"\n                onClick={() => {\n                  setShowTransactionData(false);\n                }}\n                size=\"sm\"\n                type=\"button\">\n                - Remove transaction data\n              </Button>\n            </FormGroup>\n          ) : (\n            <FormGroup>\n              <Button\n                color=\"link\"\n                onClick={() => {\n                  setShowTransactionData(true);\n                }}\n                size=\"sm\"\n                type=\"button\">\n                + Add transaction data\n              </Button>\n            </FormGroup>\n          )}\n          <Collapse isOpen={showTransactionData}>\n            <FormGroup>\n              <Label for=\"type\">Type</Label>\n              <Input\n                bsSize=\"sm\"\n                className=\"form-control\"\n                disabled={!showTransactionData}\n                id=\"type\"\n                name=\"type\"\n                required\n                type=\"select\">\n                <option>Buy</option>\n                <option>Sell</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"shares\">Shares</Label>\n              <Input\n                bsSize=\"sm\"\n                disabled={!showTransactionData}\n                id=\"shares\"\n                min=\"0\"\n                name=\"shares\"\n                required\n                step=\".001\"\n                type=\"number\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"price\">Price/Amount</Label>\n              <Input\n                bsSize=\"sm\"\n                disabled={!showTransactionData}\n                id=\"price\"\n                min=\"0\"\n                name=\"price\"\n                step=\".01\"\n                type=\"number\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"date\">\n                Date <small className=\"text-secondary\">(Optional)</small>\n              </Label>\n              <Input\n                bsSize=\"sm\"\n                disabled={!showTransactionData}\n                id=\"date\"\n                name=\"date\"\n                type=\"date\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"commission\">\n                Commission <small className=\"text-secondary\">(Optional)</small>\n              </Label>\n              <Input\n                bsSize=\"sm\"\n                disabled={!showTransactionData}\n                id=\"commission\"\n                min=\"0\"\n                name=\"commission\"\n                step=\".01\"\n                type=\"number\"\n              />\n            </FormGroup>\n          </Collapse>\n          <FormGroup style={{ marginBottom: 0 }}>\n            <Button color=\"primary\" disabled={props.isLoading} size=\"sm\" type=\"submit\">\n              Add to portfolio\n            </Button>\n          </FormGroup>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","/* @flow */\n\nimport * as React from 'react';\nimport { Button, Col, Input, Label } from 'reactstrap';\n\ntype Props = {\n  onDeletePortfolio: () => void,\n  onDownloadPortfolio: () => void,\n  onImportPortfolio: (file: Blob) => void,\n};\n\nexport default function PortfolioActions(props: Props): React.Node {\n  const handleImportTransactions = (event: SyntheticEvent<HTMLInputElement>) => {\n    const currentTarget = event.currentTarget;\n    const files = currentTarget.files;\n    if (files == null || files.length === 0) return;\n    props.onImportPortfolio(files[0]);\n\n    // Reset the input so the same file can be uploaded multiple times in a row (without\n    // resetting the `onchange` would not fire). Why upload multiple times? Testing testing\n    // testing. ABT: Always Be Testing.\n    currentTarget.value = '';\n  };\n\n  return (\n    <Col className=\"text-right\">\n      <Button color=\"link\" size=\"sm\" type=\"button\">\n        <Label className=\"label-button\">\n          <Input accept=\"text/csv\" hidden onChange={handleImportTransactions} type=\"file\" />\n          Import transactions\n        </Label>\n      </Button>\n      |\n      <Button color=\"link\" onClick={props.onDeletePortfolio} size=\"sm\" type=\"button\">\n        Delete portfolio\n      </Button>\n      |\n      <Button color=\"link\" onClick={props.onDownloadPortfolio} size=\"sm\" type=\"button\">\n        Download to spreadsheet\n      </Button>\n    </Col>\n  );\n}\n","/* @flow */\n\nimport './PortfolioNav.css';\nimport * as React from 'react';\nimport { Nav, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nexport default function PortfolioNav(): React.Node {\n  return (\n    <div className=\"bg-light shadow-sm nav-scroller\">\n      <Nav className=\"nav-portfolio\" role=\"navigation\">\n        <NavItem>\n          <NavLink className=\"nav-link\" exact to=\"/\">\n            Overview\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink className=\"nav-link\" to=\"/performance\">\n            Performance\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink className=\"nav-link\" to=\"/transactions\">\n            Transactions\n          </NavLink>\n        </NavItem>\n      </Nav>\n    </div>\n  );\n}\n","/* @flow */\n\nimport * as React from 'react';\nimport type { AppState, Dispatch } from './types';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport {\n  addTransaction,\n  deletePortfolio,\n  downloadPortfolio,\n  fetchAllQuotes,\n  importTransactionsFile,\n} from './actions';\nimport AddSymbolForm from './AddSymbolForm';\nimport PortfolioActions from './PortfolioActions';\nimport PortfolioNav from './PortfolioNav';\nimport { connect } from 'react-redux';\n\ntype OwnProps = {\n  children?: React.Node,\n  deleteDisabled: boolean,\n  onDelete: () => void,\n};\n\ntype StateProps = {\n  isLoading: boolean,\n};\n\ntype Props = OwnProps & StateProps & { dispatch: Dispatch };\n\nclass PortfolioContainer extends React.Component<Props> {\n  handleAddSymbol = (data: {\n    commission: string,\n    date: string,\n    price: string,\n    shares: string,\n    symbol: string,\n    type: 'Buy' | 'Sell',\n  }) => {\n    // Set some defaults and override the symbol to make sure it's always UPPERCASE.\n    const transaction = {\n      cashValue: null,\n      commission: parseFloat(data.commission) || 0,\n      date: data.date,\n      id: -1, // A real ID is added in the reducer.\n      notes: null,\n      price: parseFloat(data.price) || 0,\n      shares: parseFloat(data.shares) || 0,\n      symbol: data.symbol.toUpperCase(),\n      type: data.type || 'Buy', // Match the behavior of Google Finance; 0 value is a 'Buy'.\n    };\n\n    this.props.dispatch(addTransaction(transaction));\n    this.props.dispatch(fetchAllQuotes());\n  };\n\n  handleDeletePortfolio = () => {\n    if (\n      window.confirm('Are you sure you want to delete the entire portfolio? This is irreversible.')\n    ) {\n      this.props.dispatch(deletePortfolio());\n    }\n  };\n\n  handleDownloadPortfolio = () => {\n    this.props.dispatch(downloadPortfolio());\n  };\n\n  handleImportPortfolio = (file: Blob) => {\n    this.props.dispatch(importTransactionsFile(file));\n  };\n\n  render() {\n    return (\n      <>\n        <PortfolioNav />\n        <Container className=\"mb-4\">\n          <Row className=\"mb-3 mt-3\">\n            <Col>\n              <Button\n                color={this.props.deleteDisabled ? 'secondary' : 'danger'}\n                disabled={this.props.deleteDisabled}\n                onClick={this.props.onDelete}\n                outline\n                size=\"sm\">\n                Delete\n              </Button>\n            </Col>\n            <PortfolioActions\n              onDeletePortfolio={this.handleDeletePortfolio}\n              onDownloadPortfolio={this.handleDownloadPortfolio}\n              onImportPortfolio={this.handleImportPortfolio}\n            />\n          </Row>\n          {this.props.children}\n          <Row>\n            <Col md=\"6\">\n              <AddSymbolForm isLoading={this.props.isLoading} onAddSymbol={this.handleAddSymbol} />\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default (connect<Props, OwnProps, _, _, _, _>((state: AppState) => ({\n  isLoading: state.isFetchingCount > 0,\n}))(PortfolioContainer): React.ComponentType<*>);\n","/* @flow */\n\nimport * as React from 'react';\nimport { Button, Col, Row } from 'reactstrap';\nimport type { AppSettings, AppState, Dispatch, Quote, Transaction } from './types';\nimport { abbreviatedNumberFormatter, currencyFormatter, percentFormatter } from './formatters';\nimport { changePageSize, deleteSymbols } from './actions';\nimport { Link } from 'react-router-dom';\nimport PortfolioContainer from './PortfolioContainer';\nimport ReactTable from 'react-table';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport selectTableHOC from 'react-table/lib/hoc/selectTable';\n\ntype StateProps = {\n  appSettings: AppSettings,\n  quotes: { [symbol: string]: Quote },\n  symbols: Array<string>,\n  transactions: Array<Transaction>,\n};\n\ntype Props = StateProps & { dispatch: Dispatch };\n\ntype State = {\n  selectedSymbols: Set<string>,\n};\n\nconst SelectReactTable = selectTableHOC(ReactTable);\n\nfunction classes(cell) {\n  return cx('text-right', {\n    'text-danger': cell != null && cell < 0,\n    'text-success': cell != null && cell >= 0,\n  });\n}\n\nconst TABLE_COLUMNS = [\n  {\n    accessor: 'companyName',\n    Cell: props => (props.value == null ? '...' : props.value),\n    Footer: <strong>Portfolio value:</strong>,\n    Header: 'Name',\n    headerClassName: 'text-left',\n  },\n  {\n    accessor: 'symbol',\n    Cell: props => <Link to={`/stocks/${props.value}`}>{props.value}</Link>,\n    Header: 'Symbol',\n    headerClassName: 'text-left',\n  },\n  {\n    accessor: 'latestPrice',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Last Price',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'change.change',\n    Cell: props => {\n      const cell = props.original.change;\n      return (\n        <div className={classes(props.value)}>\n          {cell.change == null\n            ? '...'\n            : `${cell.change >= 0 ? '+' : ''}${currencyFormatter.format(cell.change)} (${\n                cell.changePercent >= 0 ? '+' : ''\n              }${percentFormatter.format(cell.changePercent)})`}\n        </div>\n      );\n    },\n    Header: 'Change',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'marketCap',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : abbreviatedNumberFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Mkt. Cap',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'latestVolume',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : abbreviatedNumberFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Volume',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'open',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Open',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'high',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'High',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'low',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Low',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'daysGain',\n    Cell: props => (\n      <div className={classes(props.value)}>\n        {props.value == null\n          ? '...'\n          : `${props.value >= 0 ? '+' : ''}${currencyFormatter.format(props.value)}`}\n      </div>\n    ),\n    Footer: props => {\n      const totalDaysGain = props.data.reduce((total, current) => total + current.daysGain, 0);\n      return (\n        <div className={classes(totalDaysGain)}>\n          {totalDaysGain >= 0 ? '+' : ''}\n          {currencyFormatter.format(totalDaysGain)}\n        </div>\n      );\n    },\n    Header: \"Day's gain\",\n    headerClassName: 'text-right',\n  },\n];\n\nclass Overview extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    // If any currently selected symbols are not in the next props update, remove them from the\n    // internal selected symbols `Set` to stay up-to-date.\n    let hasChanges = false;\n    const nextSymbols = new Set(nextProps.symbols);\n    const nextSelectedSymbols = new Set<string>();\n    for (const symbol of prevState.selectedSymbols) {\n      if (nextSymbols.has(symbol)) nextSelectedSymbols.add(symbol);\n      else hasChanges = true;\n    }\n\n    if (hasChanges) return { selectedSymbols: nextSelectedSymbols };\n    else return null;\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // This is *not* treated as immutable. Object identity will not always correctly indicate\n      // when changes are made.\n      selectedSymbols: new Set(),\n    };\n  }\n\n  handleDeleteSelectedSymbols = () => {\n    this.props.dispatch(deleteSymbols(Array.from(this.state.selectedSymbols)));\n  };\n\n  handlePageSizeChange = (nextPageSize: number) => {\n    this.props.dispatch(changePageSize(nextPageSize));\n  };\n\n  handleToggleAllSymbols = (isSelected: boolean) => {\n    if (this.isAllSymbolsSelected()) {\n      this.setState({ selectedSymbols: new Set() });\n    } else {\n      this.setState({\n        selectedSymbols: new Set(this.props.symbols),\n      });\n    }\n  };\n\n  handleToggleSymbolSelected = (symbol: string) => {\n    if (this.isSymbolSelected(symbol)) {\n      this.state.selectedSymbols.delete(symbol);\n    } else {\n      this.state.selectedSymbols.add(symbol);\n    }\n    this.forceUpdate();\n  };\n\n  isAllSymbolsSelected = () => {\n    return this.state.selectedSymbols.size === this.props.symbols.length;\n  };\n\n  isSymbolSelected = (symbol: string) => {\n    return this.state.selectedSymbols.has(symbol);\n  };\n\n  render() {\n    const tableData = this.props.symbols.map(symbol => {\n      const quote = this.props.quotes[symbol];\n      const transactions = this.props.transactions.filter(\n        transaction => transaction.symbol === symbol\n      );\n      const totalShares = transactions.reduce((prev, curr) => prev + curr.shares, 0);\n\n      return {\n        change: {\n          change: quote == null ? null : quote.change,\n          changePercent: quote == null ? null : quote.changePercent,\n        },\n        companyName: quote == null ? null : quote.companyName,\n        daysGain: quote == null || totalShares === 0 ? null : quote.change * totalShares,\n        high: quote == null ? null : quote.high,\n        latestPrice: quote == null ? null : quote.latestPrice,\n        latestVolume: quote == null ? null : quote.latestVolume,\n        low: quote == null ? null : quote.low,\n        marketCap: quote == null ? null : quote.marketCap,\n        open: quote == null ? null : quote.open,\n        symbol,\n      };\n    });\n\n    const deleteDisabled = this.props.symbols.length === 0 || this.state.selectedSymbols.size === 0;\n    return (\n      <PortfolioContainer\n        deleteDisabled={deleteDisabled}\n        onDelete={this.handleDeleteSelectedSymbols}>\n        <Row className=\"mb-4\">\n          <Col>\n            <SelectReactTable\n              columns={TABLE_COLUMNS}\n              data={tableData}\n              defaultSorted={[{ desc: false, id: 'symbol' }]}\n              getPaginationProps={() => ({\n                className: 'pt-2',\n                NextComponent: props => <Button className=\"btn-sm\" outline {...props} />,\n                PreviousComponent: props => <Button className=\"btn-sm\" outline {...props} />,\n                showPageJump: false,\n              })}\n              isSelected={this.isSymbolSelected}\n              keyField=\"symbol\"\n              noDataText=\"No symbols yet. Add one using the form below.\"\n              onPageSizeChange={this.handlePageSizeChange}\n              pageSize={this.props.appSettings.pageSize}\n              selectAll={this.isAllSymbolsSelected()}\n              selectType=\"checkbox\"\n              toggleAll={this.handleToggleAllSymbols}\n              toggleSelection={this.handleToggleSymbolSelected}\n            />\n          </Col>\n        </Row>\n      </PortfolioContainer>\n    );\n  }\n}\n\nexport default (connect<Props, {}, _, _, _, _>((state: AppState) => ({\n  appSettings: state.appSettings,\n  quotes: state.quotes,\n  symbols: state.symbols,\n  transactions: state.transactions,\n}))(Overview): React.ComponentType<*>);\n","/* @flow */\n\nimport * as React from 'react';\nimport { Button, Col, Row } from 'reactstrap';\nimport type { AppSettings, Dispatch, Quote, Transaction } from './types';\nimport { changePageSize, deleteSymbols } from './actions';\nimport { currencyFormatter, numberFormatter, percentFormatter } from './formatters';\nimport { Link } from 'react-router-dom';\nimport PortfolioContainer from './PortfolioContainer';\nimport ReactTable from 'react-table';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport selectTableHOC from 'react-table/lib/hoc/selectTable';\n\ntype StateProps = {\n  appSettings: AppSettings,\n  dispatch: Dispatch,\n  quotes: { [symbol: string]: Quote },\n  symbols: Array<string>,\n  transactions: Array<Transaction>,\n};\n\ntype Props = StateProps;\n\ntype State = {\n  selectedSymbols: Set<string>,\n};\n\nconst SelectReactTable = selectTableHOC(ReactTable);\n\nfunction classes(cell) {\n  return cx('text-right', {\n    'text-danger': cell != null && cell < 0,\n    'text-success': cell != null && cell >= 0,\n  });\n}\n\nconst TABLE_COLUMNS = [\n  {\n    accessor: 'companyName',\n    Cell: props => (props.value == null ? '...' : props.value),\n    Footer: <strong>Portfolio value:</strong>,\n    Header: 'Name',\n    headerClassName: 'text-left',\n  },\n  {\n    accessor: 'symbol',\n    Cell: props => <Link to={`/stocks/${props.value}`}>{props.value}</Link>,\n    Header: 'Symbol',\n    headerClassName: 'text-left',\n  },\n  {\n    accessor: 'latestPrice',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Last Price',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'change.change',\n    Cell: props => {\n      const cell = props.original.change;\n      return (\n        <div className={classes(props.value)}>\n          {cell.change == null\n            ? '...'\n            : `${cell.change >= 0 ? '+' : ''}${currencyFormatter.format(cell.change)} (${\n                cell.changePercent >= 0 ? '+' : ''\n              }${percentFormatter.format(cell.changePercent)})`}\n        </div>\n      );\n    },\n    Header: 'Change',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'shares',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value === 0 ? '...' : numberFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Shares',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'costBasis',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Cost Basis',\n    headerClassName: 'text-right',\n    Footer: props => (\n      <div className=\"text-right\">\n        {currencyFormatter.format(\n          props.data.reduce((total, current) => total + current.costBasis, 0)\n        )}\n      </div>\n    ),\n  },\n  {\n    accessor: 'marketValue',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Mkt. Value',\n    headerClassName: 'text-right',\n    Footer: props => (\n      <div className=\"text-right\">\n        {currencyFormatter.format(\n          props.data.reduce((total, current) => total + current.marketValue, 0)\n        )}\n      </div>\n    ),\n  },\n  {\n    accessor: 'gain',\n    Cell: props => (\n      <div className={classes(props.value)}>\n        {props.value == null\n          ? '...'\n          : `${props.value >= 0 ? '+' : ''}${currencyFormatter.format(props.value)}`}\n      </div>\n    ),\n    Header: 'Gain',\n    headerClassName: 'text-right',\n    Footer: props => {\n      const totalCostBasis = props.data.reduce((total, current) => total + current.costBasis, 0);\n      return (\n        <div className={classes(totalCostBasis)}>\n          {totalCostBasis >= 0 ? '+' : ''}\n          {currencyFormatter.format(totalCostBasis)}\n        </div>\n      );\n    },\n  },\n  {\n    accessor: 'gainPercent',\n    Cell: props => (\n      <div className={classes(props.value)}>\n        {props.value == null\n          ? '...'\n          : `${props.value >= 0 ? '+' : ''}${percentFormatter.format(props.value)}`}\n      </div>\n    ),\n    Header: 'Gain %',\n    headerClassName: 'text-right',\n    Footer: props => {\n      const totalCostBasis = props.data.reduce((total, current) => total + current.costBasis, 0);\n      const totalMarketValue = props.data.reduce(\n        (total, current) => total + current.marketValue,\n        0\n      );\n      const totalGainPercent =\n        totalMarketValue === 0 ? 0 : (totalMarketValue - totalCostBasis) / totalCostBasis;\n      return (\n        <div className={classes(totalGainPercent)}>\n          {totalCostBasis >= 0 ? '+' : ''}\n          {percentFormatter.format(totalGainPercent)}\n        </div>\n      );\n    },\n  },\n  {\n    accessor: 'daysGain',\n    Cell: props => (\n      <div className={classes(props.value)}>\n        {props.value == null\n          ? '...'\n          : `${props.value >= 0 ? '+' : ''}${currencyFormatter.format(props.value)}`}\n      </div>\n    ),\n    Footer: props => {\n      const totalDaysGain = props.data.reduce((total, current) => total + current.daysGain, 0);\n      return (\n        <div className={classes(totalDaysGain)}>\n          {totalDaysGain >= 0 ? '+' : ''}\n          {currencyFormatter.format(totalDaysGain)}\n        </div>\n      );\n    },\n    Header: \"Day's gain\",\n    headerClassName: 'text-right',\n  },\n];\n\nclass Performance extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    // If any currently selected symbols are not in the next props update, remove them from the\n    // internal selected symbols `Set` to stay up-to-date.\n    let hasChanges = false;\n    const nextSymbols = new Set(nextProps.symbols);\n    const nextSelectedSymbols = new Set<string>();\n    for (const symbol of prevState.selectedSymbols) {\n      if (nextSymbols.has(symbol)) nextSelectedSymbols.add(symbol);\n      else hasChanges = true;\n    }\n\n    if (hasChanges) return { selectedSymbols: nextSelectedSymbols };\n    else return null;\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // This is *not* treated as immutable. Object identity will not always correctly indicate\n      // when changes are made.\n      selectedSymbols: new Set(),\n    };\n  }\n\n  handleDeleteSelectedSymbols = () => {\n    this.props.dispatch(deleteSymbols(Array.from(this.state.selectedSymbols)));\n  };\n\n  handlePageSizeChange = (nextPageSize: number) => {\n    this.props.dispatch(changePageSize(nextPageSize));\n  };\n\n  handleToggleAllSymbols = (isSelected: boolean) => {\n    if (this.isAllSymbolsSelected()) {\n      this.setState({ selectedSymbols: new Set() });\n    } else {\n      this.setState({\n        selectedSymbols: new Set(this.props.symbols),\n      });\n    }\n  };\n\n  handleToggleSymbolSelected = (symbol: string) => {\n    if (this.isSymbolSelected(symbol)) {\n      this.state.selectedSymbols.delete(symbol);\n    } else {\n      this.state.selectedSymbols.add(symbol);\n    }\n    this.forceUpdate();\n  };\n\n  isAllSymbolsSelected = () => {\n    return this.state.selectedSymbols.size === this.props.symbols.length;\n  };\n\n  isSymbolSelected = (symbol: string) => {\n    return this.state.selectedSymbols.has(symbol);\n  };\n\n  render() {\n    const tableData = this.props.symbols.map(symbol => {\n      const quote = this.props.quotes[symbol];\n      const transactions = this.props.transactions.filter(\n        transaction => transaction.symbol === symbol\n      );\n\n      let costBasis = 0;\n      let marketValue = 0;\n      let totalShares = 0;\n      transactions.forEach(transaction => {\n        // Only summing 'Buy' transactions.\n        if (transaction.type !== 'Buy') return;\n\n        costBasis += transaction.price * transaction.shares;\n        costBasis += transaction.commission;\n        totalShares += transaction.shares;\n        if (quote != null) marketValue += quote.latestPrice * transaction.shares;\n      });\n\n      const gain = marketValue - costBasis;\n      let gainPercent = 0;\n      if (quote != null) gainPercent = gain / costBasis;\n\n      // Show returns only if the user owns shares and the quote has been returned from the API call.\n      // Showing any earlier will look like some erroneous and funky data.\n      const showReturns = totalShares > 0 && quote != null;\n      return {\n        change: {\n          change: quote == null ? null : quote.change,\n          changePercent: quote == null ? null : quote.changePercent,\n        },\n        companyName: quote == null ? null : quote.companyName,\n        costBasis: showReturns ? costBasis : null,\n        daysGain: quote == null || totalShares === 0 ? null : quote.change * totalShares,\n        gain: showReturns ? gain : null,\n        gainPercent: showReturns ? gainPercent : null,\n        latestPrice: quote == null ? null : quote.latestPrice,\n        marketValue: showReturns ? marketValue : null,\n        shares: totalShares,\n        symbol,\n      };\n    });\n\n    const deleteDisabled = this.props.symbols.length === 0 || this.state.selectedSymbols.size === 0;\n    return (\n      <PortfolioContainer\n        deleteDisabled={deleteDisabled}\n        onDelete={this.handleDeleteSelectedSymbols}>\n        <Row className=\"mb-4\">\n          <Col>\n            <SelectReactTable\n              columns={TABLE_COLUMNS}\n              data={tableData}\n              defaultSorted={[{ desc: false, id: 'symbol' }]}\n              getPaginationProps={() => ({\n                NextComponent: props => <Button className=\"btn-sm\" outline {...props} />,\n                PreviousComponent: props => <Button className=\"btn-sm\" outline {...props} />,\n                className: 'pt-2',\n                showPageJump: false,\n              })}\n              isSelected={this.isSymbolSelected}\n              keyField=\"symbol\"\n              noDataText=\"No symbols yet. Add one using the form below.\"\n              onPageSizeChange={this.handlePageSizeChange}\n              pageSize={this.props.appSettings.pageSize}\n              selectAll={this.isAllSymbolsSelected()}\n              selectType=\"checkbox\"\n              toggleAll={this.handleToggleAllSymbols}\n              toggleSelection={this.handleToggleSymbolSelected}\n            />\n          </Col>\n        </Row>\n      </PortfolioContainer>\n    );\n  }\n}\n\nexport default (connect<Props, {}, _, _, _, _>(state => ({\n  appSettings: state.appSettings,\n  quotes: state.quotes,\n  symbols: state.symbols,\n  transactions: state.transactions,\n}))(Performance): React.ComponentType<*>);\n","/* @flow */\n\nimport * as React from 'react';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Col, Container, Row } from 'reactstrap';\nimport {\n  abbreviatedNumberFormatter,\n  currencyFormatter,\n  numberFormatter,\n  percentFormatter,\n} from './formatters';\nimport { deviation, extent, max, min } from 'd3-array';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AreaClosed } from '@vx/shape';\nimport type { Dispatch } from './types';\nimport { Group } from '@vx/group';\nimport { LinearGradient } from '@vx/gradient';\nimport cx from 'classnames';\nimport { fetchSymbolData } from './actions';\n\ntype Props = {\n  match: Object,\n};\n\nconst wholeNumberFormatter = new window.Intl.NumberFormat(undefined);\n\nfunction SummaryListItem({ title, value }: { title: string, value: string }) {\n  return (\n    <li className=\"d-flex justify-content-between border-bottom py-2\">\n      <span>{title}</span>\n      <strong>{value}</strong>\n    </li>\n  );\n}\n\nconst width = 635;\nconst height = 400;\nconst x = d => new Date(d.date);\nconst y = d => d.close;\n\n// Bounds\nconst margin = {\n  top: 20,\n  bottom: 40,\n  left: 50,\n  right: 0,\n};\nconst xMax = width - margin.left - margin.right;\nconst yMax = height - margin.top - margin.bottom;\n\nexport default function Stock({ match }: Props): React.Node {\n  const dispatch = useDispatch<Dispatch>();\n  const chart = useSelector(state => state.charts[match.params.symbol]);\n  const quote = useSelector(state => state.quotes[match.params.symbol]);\n\n  React.useEffect(() => {\n    dispatch(fetchSymbolData(match.params.symbol));\n  }, [dispatch, match.params.symbol]);\n\n  let xScale;\n  let yScale;\n  if (chart != null) {\n    const deviationYFudge = deviation(chart, y) / 2;\n    xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(chart, x),\n    });\n    yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [min(chart, y) - deviationYFudge, max(chart, y) + deviationYFudge],\n    });\n  }\n  return (\n    <Container className=\"mb-3 mt-3\">\n      <h2>\n        {quote == null ? '...' : quote.companyName} ({match.params.symbol})\n      </h2>\n      <h3>\n        <small>{quote == null ? '...' : quote.latestPrice}</small>{' '}\n        <span\n          className={cx({\n            'text-danger': quote != null && quote.change < 0,\n            'text-success': quote != null && quote.change >= 0,\n          })}>\n          {quote == null\n            ? '...'\n            : `${quote.change >= 0 ? '+' : ''}${currencyFormatter.format(quote.change)} (${\n                quote.changePercent >= 0 ? '+' : ''\n              }${percentFormatter.format(quote.changePercent)})`}\n        </span>\n      </h3>\n      <Row className=\"mt-4\">\n        <Col className=\"border-top border-top-lg pt-2\" md=\"4\">\n          <h4 className=\"mb-3\">Summary</h4>\n          <ul className=\"list-unstyled\">\n            <SummaryListItem\n              title=\"Volume\"\n              value={quote == null ? '...' : wholeNumberFormatter.format(quote.latestVolume)}\n            />\n            <SummaryListItem\n              title=\"Avg Daily Volume\"\n              value={quote == null ? '...' : wholeNumberFormatter.format(quote.avgTotalVolume)}\n            />\n            <SummaryListItem\n              title=\"Previous Close\"\n              value={quote == null ? '...' : currencyFormatter.format(quote.previousClose)}\n            />\n            <SummaryListItem\n              title=\"52-week Range\"\n              value={\n                quote == null\n                  ? '...'\n                  : `${currencyFormatter.format(quote.week52Low)}–${currencyFormatter.format(\n                      quote.week52High\n                    )}`\n              }\n            />\n            <SummaryListItem\n              title=\"Mkt. Cap\"\n              value={quote == null ? '...' : abbreviatedNumberFormatter.format(quote.marketCap)}\n            />\n            <SummaryListItem\n              title=\"P/E Ratio\"\n              value={\n                quote == null || quote.peRatio == null\n                  ? '...'\n                  : numberFormatter.format(quote.peRatio)\n              }\n            />\n          </ul>\n        </Col>\n        <Col className=\"border-top border-top-lg pt-2\" md={{ offset: 1, size: 7 }}>\n          <h4 className=\"mb-3\">History</h4>\n          {chart == null ? (\n            <div\n              className=\"text-center\"\n              style={{\n                backgroundColor: '#343a40',\n                borderRadius: '0.25rem',\n                color: '#fff',\n                height: `${height}px`,\n                lineHeight: `${height}px`,\n              }}>\n              Loading...\n            </div>\n          ) : (\n            <svg width={width} height={height}>\n              <rect x={0} y={0} width={width} height={height} fill=\"#343a40\" rx={'0.25rem'} />\n              <LinearGradient id=\"gradient\">\n                <stop offset=\"0%\" stopColor=\"#ffc107\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#ffc107\" stopOpacity={0.2} />\n              </LinearGradient>\n              <Group top={margin.top} left={margin.left}>\n                <AreaClosed\n                  data={chart}\n                  xScale={xScale}\n                  yScale={yScale}\n                  x={x}\n                  y={y}\n                  fill={'url(#gradient)'}\n                  stroke={''}\n                />\n                <AxisLeft\n                  left={0}\n                  scale={yScale}\n                  stroke={'rgba(255,255,255,0.3)'}\n                  top={0}\n                  tickLabelProps={(val, i) => ({\n                    dx: '-0.25em',\n                    dy: '0.25em',\n                    textAnchor: 'end',\n                    fontFamily: 'Arial',\n                    fontSize: 10,\n                    fill: 'rgba(255,255,255,0.9)',\n                  })}\n                  tickStroke={'rgba(255,255,255,0.3)'}\n                  tickTextFill={'rgba(255,255,255,0.3)'}\n                />\n                <AxisBottom\n                  scale={xScale}\n                  stroke={'rgba(255,255,255,0.3)'}\n                  top={yMax}\n                  tickLabelProps={(val, i) => ({\n                    dy: '0.25em',\n                    textAnchor: 'middle',\n                    fontFamily: 'Arial',\n                    fontSize: 10,\n                    fill: 'rgba(255,255,255,0.9)',\n                  })}\n                  tickStroke={'rgba(255,255,255,0.3)'}\n                  tickTextFill={'rgba(255,255,255,0.3)'}\n                />\n              </Group>\n            </svg>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/* @flow */\n\nimport * as React from 'react';\nimport { Button, Col, Row } from 'reactstrap';\nimport type { AppSettings, AppState, Dispatch, Quote, Transaction } from './types';\nimport { changePageSize, deleteTransactions } from './actions';\nimport { currencyFormatter, numberFormatter } from './formatters';\nimport { Link } from 'react-router-dom';\nimport PortfolioContainer from './PortfolioContainer';\nimport ReactTable from 'react-table';\nimport { connect } from 'react-redux';\nimport selectTableHOC from 'react-table/lib/hoc/selectTable';\n\ntype StateProps = {\n  appSettings: AppSettings,\n  dispatch: Dispatch,\n  quotes: { [symbol: string]: Quote },\n  transactions: Array<Transaction>,\n};\n\ntype Props = StateProps;\n\ntype State = {\n  selectedTransactionIds: Set<number>,\n};\n\nconst SelectReactTable = selectTableHOC(ReactTable);\n\nconst TABLE_COLUMNS = [\n  {\n    accessor: 'companyName',\n    Cell: props => (props.value == null ? '...' : props.value),\n    Header: 'Name',\n    headerClassName: 'text-left',\n  },\n  {\n    accessor: 'symbol',\n    Cell: props => <Link to={`/stocks/${props.value}`}>{props.value}</Link>,\n    Header: 'Symbol',\n    headerClassName: 'text-left',\n  },\n  { accessor: 'type', Header: 'Type', headerClassName: 'text-left' },\n  {\n    accessor: 'date',\n    Cell: props => <time>{props.value}</time>,\n    Header: 'Date',\n    headerClassName: 'text-left',\n  },\n  {\n    accessor: 'shares',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : numberFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Shares',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'price',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Price',\n    headerClassName: 'text-right',\n  },\n  {\n    accessor: 'commission',\n    Cell: props => (\n      <div className=\"text-right\">\n        {props.value == null ? '...' : currencyFormatter.format(props.value)}\n      </div>\n    ),\n    Header: 'Commission',\n    headerClassName: 'text-right',\n  },\n];\n\nclass Transactions extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    // If any currently selected transactions are not in the next props update, remove them from the\n    // internal selected transactions `Set` to stay up-to-date.\n    let hasChanges = false;\n    const nextTransactions = new Set(nextProps.transactions);\n    const nextSelectedTransactionIds = new Set<number>();\n    for (const transactionId of prevState.selectedTransactionIds) {\n      if (nextTransactions.has(transactionId)) nextSelectedTransactionIds.add(transactionId);\n      else hasChanges = true;\n    }\n\n    if (hasChanges) return { selectedTransactionIds: nextSelectedTransactionIds };\n    else return null;\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // This is *not* treated as immutable. Object identity will not always correctly indicate\n      // when changes are made.\n      selectedTransactionIds: new Set(),\n    };\n  }\n\n  handleDeleteSelectedTransactions = () => {\n    const transactionsToDelete = this.props.transactions.filter(transaction =>\n      this.state.selectedTransactionIds.has(transaction.id)\n    );\n    this.props.dispatch(deleteTransactions(transactionsToDelete));\n  };\n\n  handlePageSizeChange = (nextPageSize: number) => {\n    this.props.dispatch(changePageSize(nextPageSize));\n  };\n\n  handleToggleAllTransactionIds = (isSelected: boolean) => {\n    if (this.isAllTransactionIdsSelected()) {\n      this.setState({ selectedTransactionIds: new Set() });\n    } else {\n      this.setState({\n        selectedTransactionIds: new Set(this.props.transactions.map(transaction => transaction.id)),\n      });\n    }\n  };\n\n  handleToggleTransactionIdSelected = (transactionId: number) => {\n    if (this.isTransactionIdSelected(transactionId)) {\n      this.state.selectedTransactionIds.delete(transactionId);\n    } else {\n      this.state.selectedTransactionIds.add(transactionId);\n    }\n    this.forceUpdate();\n  };\n\n  isAllTransactionIdsSelected = () => {\n    return this.state.selectedTransactionIds.size === this.props.transactions.length;\n  };\n\n  isTransactionIdSelected = (transactionId: number) => {\n    return this.state.selectedTransactionIds.has(transactionId);\n  };\n\n  render() {\n    const tableData = this.props.transactions.map(transaction => {\n      const quote = this.props.quotes[transaction.symbol];\n      return {\n        ...transaction,\n        companyName: quote == null ? null : quote.companyName,\n      };\n    });\n    const deleteDisabled =\n      this.props.transactions.length === 0 || this.state.selectedTransactionIds.size === 0;\n    return (\n      <PortfolioContainer\n        deleteDisabled={deleteDisabled}\n        onDelete={this.handleDeleteSelectedTransactions}>\n        <Row className=\"mb-3\">\n          <Col>\n            <SelectReactTable\n              columns={TABLE_COLUMNS}\n              data={tableData}\n              defaultSorted={[{ desc: false, id: 'symbol' }]}\n              getPaginationProps={() => ({\n                className: 'pt-2',\n                NextComponent: props => <Button className=\"btn-sm\" outline {...props} />,\n                PreviousComponent: props => <Button className=\"btn-sm\" outline {...props} />,\n                showPageJump: false,\n              })}\n              isSelected={this.isTransactionIdSelected}\n              keyField=\"id\"\n              noDataText=\"No transactions yet. Add one using the form below.\"\n              onPageSizeChange={this.handlePageSizeChange}\n              pageSize={this.props.appSettings.pageSize}\n              selectAll={this.isAllTransactionIdsSelected()}\n              selectType=\"checkbox\"\n              toggleAll={this.handleToggleAllTransactionIds}\n              toggleSelection={this.handleToggleTransactionIdSelected}\n            />\n          </Col>\n        </Row>\n      </PortfolioContainer>\n    );\n  }\n}\n\nexport default (connect<Props, {}, _, _, _, _>((state: AppState) => ({\n  appSettings: state.appSettings,\n  quotes: state.quotes,\n  transactions: state.transactions,\n}))(Transactions): React.ComponentType<*>);\n","/* @flow */\n\nimport './App.css';\nimport * as React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Col, Container, Row } from 'reactstrap';\nimport type { Dispatch } from './types';\nimport Navbar from './Navbar';\nimport Overview from './Overview';\nimport Performance from './Performance';\nimport Stock from './Stock';\nimport Transactions from './Transactions';\nimport { fetchAllQuotes } from './actions';\nimport { useDispatch } from 'react-redux';\n\nexport default function App(): React.Node {\n  const dispatch = useDispatch<Dispatch>();\n  React.useEffect(() => {\n    dispatch(fetchAllQuotes());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <div>\n        {/* Wrap the `Navbar` in a pathless route to ensure it is always rendered and always updates\n            on navigation. Updates are blocked because internally the `Navbar` is wrapped by\n            react-redux's `connect`.\n\n            See: React Router's [\"Dealing With Update Blocking\"][0] */}\n        <Route component={Navbar} />\n        <Route exact path=\"/\" component={Overview} />\n        <Route path=\"/performance\" component={Performance} />\n        <Route path=\"/stocks/:symbol\" component={Stock} />\n        <Route path=\"/transactions\" component={Transactions} />\n        <footer className=\"bg-light py-4\">\n          <Container>\n            <Row>\n              <Col>\n                <small className=\"text-secondary\">\n                  Created by Ross Allen &lt;\n                  <a className=\"link-secondary\" href=\"https://github.com/ssorallen\">\n                    ssorallen\n                  </a>\n                  &gt;{' '}\n                  <span aria-label=\"\" role=\"img\">\n                    🦉\n                  </span>\n                </small>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <small className=\"text-secondary\">\n                  Source available at{' '}\n                  <a className=\"link-secondary\" href=\"https://github.com/ssorallen/finance\">\n                    ssorallen/finance\n                  </a>\n                </small>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <small className=\"text-secondary\">\n                  Data provided by{' '}\n                  <a className=\"link-secondary\" href=\"https://iexcloud.io\">\n                    IEX Cloud\n                  </a>\n                </small>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\n// [0]: https://github.com/ReactTraining/react-router/blob/4b61484ec9eea4bc3a2eb36028c47934414542ae/packages/react-router/docs/guides/blocked-updates.md\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* @flow */\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-table/react-table.css';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport App from './App';\nimport type { AppState } from './types';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport persistState from 'redux-localstorage';\nimport reducers from './reducers';\nimport registerServiceWorker from './registerServiceWorker';\nimport thunk from 'redux-thunk';\n\nconst rootElement = document.getElementById('root');\nif (rootElement == null) throw new Error('Missing element #root to render app');\n\n// Enable Redux Devtools in the browser.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Pass an initial state to `createStore` rather than use a default argument in the reducer to\n// enable 'redux-localstorage' to merge its persisted state with this initial state.\nconst initialState: AppState = {\n  allIexSymbols: null,\n  appSettings: {\n    pageSize: 10,\n  },\n  charts: {},\n  fetchErrorMessage: null,\n  iexApiKey: '',\n  isFetchingAllIexSymbols: false,\n  isFetchingCount: 0,\n  nextTransactionId: 1,\n  quotes: {},\n  symbols: [],\n  transactions: [],\n  updatedAt: null,\n};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeEnhancers(\n    applyMiddleware(thunk),\n    persistState(\n      // Any keys in the following Array will be persisted from the store to local storage and\n      // re-hydrated when the app re-loads.\n      [\n        'allIexSymbols',\n        'appSettings',\n        'iexApiKey',\n        'nextTransactionId',\n        'quotes',\n        'symbols',\n        'transactions',\n        'updatedAt',\n      ],\n      {\n        key: 'default',\n      }\n    )\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\nregisterServiceWorker();\n","/* @flow */\n\nimport type { Action, AppState } from './types';\nimport csvStringify from 'csv-stringify/lib/es5/sync';\nimport { transformStocksToGf } from './transformers';\n\nexport default function(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case 'ADD_SYMBOL': {\n      const nextSymbols =\n        state.symbols.indexOf(action.symbol) === -1\n          ? [...state.symbols, action.symbol]\n          : state.symbols;\n      return {\n        ...state,\n        symbols: nextSymbols,\n      };\n    }\n    case 'ADD_TRANSACTION': {\n      const nextSymbols =\n        state.symbols.indexOf(action.transaction.symbol) === -1\n          ? [...state.symbols, action.transaction.symbol]\n          : state.symbols;\n\n      // Adding a new Transaction also adds the Transaction's symbol to the list of symbols to\n      // watch.\n      return {\n        ...state,\n        nextTransactionId: state.nextTransactionId + 1,\n        symbols: nextSymbols,\n        transactions: [\n          ...state.transactions,\n          { ...action.transaction, id: state.nextTransactionId },\n        ],\n      };\n    }\n    case 'ADD_TRANSACTIONS': {\n      // Ensure no duplicate symbols are added.\n      const nextSymbols = new Set(state.symbols);\n      let nextTransactionId = state.nextTransactionId;\n      const newTransactions = action.transactions.map(transaction => {\n        nextSymbols.add(transaction.symbol);\n        const newTransaction = { ...transaction, id: nextTransactionId };\n        nextTransactionId += 1;\n        return newTransaction;\n      });\n\n      return {\n        ...state,\n        nextTransactionId,\n        symbols: Array.from(nextSymbols),\n        transactions: state.transactions.concat(newTransactions),\n      };\n    }\n    case 'CHANGE_PAGE_SIZE':\n      return {\n        ...state,\n        appSettings: {\n          ...state.appSettings,\n          pageSize: action.pageSize,\n        },\n      };\n    case 'DELETE_PORTFOLIO':\n      return {\n        ...state,\n        nextTransactionId: 1,\n        symbols: [],\n        transactions: [],\n      };\n    case 'DELETE_SYMBOLS': {\n      // Preserve Flow refinement inside `filter` by keeping a reference to `symbols`.\n      const symbols = action.symbols;\n      return {\n        ...state,\n        symbols: state.symbols.filter(symbol => symbols.indexOf(symbol) === -1),\n      };\n    }\n    case 'DELETE_TRANSACTIONS': {\n      // Preserve Flow refinement inside `filter` by keeping a reference to `transactions`.\n      const transactions = action.transactions;\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          transaction => transactions.indexOf(transaction) === -1\n        ),\n      };\n    }\n    case 'DOWNLOAD_PORTFOLIO': {\n      const documentBody = document.body;\n      if (documentBody == null) throw new Error('How in the hell did we get here?');\n\n      const csvData = csvStringify(transformStocksToGf(state.transactions, state.quotes), {\n        columns: [\n          'Symbol',\n          'Name',\n          'Type',\n          'Date',\n          'Shares',\n          'Price',\n          'Cash value',\n          'Commission',\n          'Notes',\n        ],\n        header: true,\n      });\n\n      // The following is some funky funkiness to download a file generated in JS. Get down with\n      // this funk.\n      const blob = new Blob([csvData], { type: 'text/csv' });\n      const a = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      a.download = 'My Portfolio.csv';\n      a.href = url;\n      a.style.display = 'none';\n      documentBody.appendChild(a);\n      a.click();\n      URL.revokeObjectURL(url);\n\n      return state;\n    }\n    case 'FETCH_ALL_IEX_SYMBOLS_FAILURE':\n      return {\n        ...state,\n        isFetchingAllIexSymbols: false,\n      };\n    case 'FETCH_ALL_IEX_SYMBOLS_REQUEST':\n      return {\n        ...state,\n        isFetchingAllIexSymbols: true,\n      };\n    case 'FETCH_ALL_IEX_SYMBOLS_SUCCESS':\n      return {\n        ...state,\n        allIexSymbols: action.allIexSymbols,\n        isFetchingAllIexSymbols: false,\n      };\n    case 'FETCH_SYMBOL_DATA_REQUEST':\n      return {\n        ...state,\n        isFetchingCount: state.isFetchingCount + 1,\n      };\n    case 'FETCH_SYMBOL_DATA_FAILURE':\n      return {\n        ...state,\n        isFetchingCount: state.isFetchingCount - 1,\n      };\n    case 'FETCH_SYMBOL_DATA_SUCCESS':\n      return {\n        ...state,\n        charts: { ...state.charts, [action.symbol]: action.symbolData.chart },\n        isFetchingCount: state.isFetchingCount - 1,\n        quotes: { ...state.quotes, [action.symbol]: action.symbolData.quote },\n      };\n    case 'FETCH_QUOTES_FAILURE':\n      return {\n        ...state,\n        fetchErrorMessage: action.error.message,\n        isFetchingCount: state.isFetchingCount - 1,\n      };\n    case 'FETCH_QUOTES_REQUEST':\n      return {\n        ...state,\n        fetchErrorMessage: null,\n        isFetchingCount: state.isFetchingCount + 1,\n      };\n    case 'FETCH_QUOTES_SUCCESS':\n      return {\n        ...state,\n        isFetchingCount: state.isFetchingCount - 1,\n        quotes: action.quotes,\n        updatedAt: Date.now(),\n      };\n    case 'SET_IEX_API_KEY':\n      return {\n        ...state,\n        iexApiKey: action.iexApiKey,\n      };\n    default:\n      return state;\n  }\n}\n"],"sourceRoot":""}